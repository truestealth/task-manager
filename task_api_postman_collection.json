{
	"info": {
		"_postman_id": "d8f8c6b7-1d9e-4b8a-8f2e-c3f7e1d9b5a1",
		"name": "Laravel Task Management API",
		"description": "Коллекция для тестирования API управления задачами на Laravel.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "0"
	},
	"item": [
		{
			"name": "Authentication",
			"description": "Запросы, связанные с аутентификацией пользователей.",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test User Postman\",\n    \"email\": \"postman@example.com\",\n    \"password\": \"password\",\n    \"password_confirmation\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"register"
							]
						},
						"description": "Регистрация нового пользователя."
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"try {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.token) {",
									"        pm.collectionVariables.set(\"authToken\", responseJson.token);",
									"        console.log(\"Auth token set.\");",
									"    } else {",
									"        console.log(\"Token not found in login response.\");",
									"    }",
									"} catch (e) {",
									"    console.log(\"Error parsing login response:\", e);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"postman@example.com\",\n    \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"login"
							]
						},
						"description": "Аутентификация пользователя и получение токена. Токен автоматически сохраняется в переменную коллекции `authToken`."
					},
					"response": []
				},
				{
					"name": "Logout User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"logout"
							]
						},
						"description": "Выход пользователя из системы (удаление токенов). Требуется Bearer токен."
					},
					"response": []
				}
			]
		},
		{
			"name": "Tasks",
			"description": "Запросы для управления задачами (CRUD, фильтрация).",
			"item": [
				{
					"name": "List Tasks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tasks"
							],
							"query": [
								{
									"key": "status",
									"value": "pending",
									"description": "Фильтр по статусу (pending, in_progress, completed)",
									"disabled": true
								},
								{
									"key": "due_date",
									"value": "2024-04-25",
									"description": "Фильтр по точной дате (YYYY-MM-DD)",
									"disabled": true
								},
								{
									"key": "due_date_after",
									"value": "2024-04-24",
									"description": "Фильтр по дате ПОСЛЕ (YYYY-MM-DD)",
									"disabled": true
								},
								{
									"key": "due_date_before",
									"value": "2024-04-26",
									"description": "Фильтр по дате ДО (YYYY-MM-DD)",
									"disabled": true
								}
							]
						},
						"description": "Получение списка задач текущего пользователя с возможностью фильтрации. Требуется Bearer токен."
					},
					"response": []
				},
				{
					"name": "Create Task",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Новая задача из Postman\",\n    \"description\": \"Детальное описание задачи\",\n    \"due_date\": \"2024-12-31\",\n    \"status\": \"pending\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tasks"
							]
						},
						"description": "Создание новой задачи. Требуется Bearer токен."
					},
					"response": []
				},
				{
					"name": "Get Task",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/tasks/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tasks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1",
									"description": "ID задачи для получения"
								}
							]
						},
						"description": "Получение информации о конкретной задаче. Требуется Bearer токен."
					},
					"response": []
				},
				{
					"name": "Update Task",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Обновленное название задачи\",\n    \"status\": \"completed\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/tasks/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tasks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1",
									"description": "ID задачи для обновления"
								}
							]
						},
						"description": "Обновление существующей задачи. Можно передавать только изменяемые поля. Требуется Bearer токен."
					},
					"response": []
				},
				{
					"name": "Delete Task",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/tasks/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tasks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1",
									"description": "ID задачи для удаления"
								}
							]
						},
						"description": "Удаление задачи. Требуется Bearer токен."
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{authToken}}",
						"type": "string"
					}
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost",
			"type": "string",
			"description": "Базовый URL вашего локального сервера (например, http://localhost или http://your-project.test)"
		},
		{
			"key": "authToken",
			"value": "",
			"type": "string",
			"description": "Токен аутентификации (устанавливается автоматически после успешного Login)"
		}
	]
} 